import React, { useState } from 'react';
import { View, Text, TextInput, FlatList, TouchableOpacity } from 'react-native';
import Ionicons from 'react-native-vector-icons/Ionicons';
import Feather from 'react-native-vector-icons/Feather';
import FontAwesome from '@expo/vector-icons/FontAwesome';
import { useTheme } from './context/ThemeContext';
import { SafeAreaView } from 'react-native-safe-area-context';
import { useNavigation } from '@react-navigation/native';

const NewAvisView = () => {
    const { theme } = useTheme();
    const navigation = useNavigation();

    const [inputValue, setInputValue] = useState('');
    const [suggestions, setSuggestions] = useState([]);
    const [selectedPlat, setSelectedPlat] = useState('');

    const [isGlobalPlat, setIsGlobalPlat] = useState(false);   

    const platsPredefinis = ['üçï Pizza', 'üçù Pasta', 'ü•ó Salad', 'üçî Burger', 'üç£ Sushi'];

    const platsGlobal = [
        'üçï Pizza',
        'üçù Pasta',
        'ü•ó Salad',
        'üçî Burger',
        'üç£ Sushi',
        'üçõ Curry',
        'üçú Ramen',
        'üåÆ Tacos',
        'ü•© Steak',
        'üç§ Shrimp',
        'ü•ô Kebab',
        'üç≤ Hotpot',
        'üç± Bento',
        'ü•ñ Baguette',
        'üçû Bread',
        'ü•™ Sandwich',
        'üç∞ Cake',
        'üç™ Cookies',
        'ü•ß Pie',
        'üçÆ Flan',
        'üç´ Chocolate',
        'üç¨ Candy',
        'üçø Popcorn',
        'ü•ê Croissant',
        'üç© Donut',
        'ü•ì Bacon',
        'ü•û Pancakes',
        'üßá Waffles',
        'üç† Sweet Potato',
        'üç≥ Eggs',
        'üçü Fries',
        'üå≠ Hot Dog',
        'üçñ Ribs',
        'üçó Fried Chicken',
        'ü•• Coconut',
        'üçç Pineapple',
        'üçâ Watermelon',
        'üçá Grapes',
        'üçí Cherries',
        'üçì Strawberries',
        'üçã Lemon',
        'üçå Banana',
        'üçé Apple',
        'üçè Green Apple',
        'üçä Orange',
        'üçê Pear',
        'üçë Peach',
        'üçà Melon',
        'ü•ù Kiwi',
        'üçÖ Tomato',
        'üåΩ Corn',
        'ü•í Cucumber',
        'ü•ï Carrot',
        'ü•¶ Broccoli',
        'ü•¨ Lettuce',
        'ü•î Potato',
        'üçÜ Eggplant',
        'üçÑ Mushrooms',
        'üå∂Ô∏è Pepper',
        'üßÑ Garlic',
        'üßÖ Onion',
        'üçö Rice',
        'üçò Rice Cracker',
        'üç¢ Oden',
        'üç° Dango',
        'üçß Shaved Ice',
        'üç® Ice Cream',
        'üç¶ Soft Serve',
        'üçπ Cocktail',
        'üç∏ Martini',
        'üç∑ Wine',
        'üç∫ Beer',
        'ü•Ç Champagne',
        '‚òï Coffee',
        'üçµ Tea',
        'ü•§ Soda',
        'üç∂ Sake',
        'üßÉ Juice',
        'ü•õ Milk',
        'üçØ Honey',
        'üßà Butter',
        'ü•£ Cereal',
        'üßÄ Cheese',
        'üçñ Ham',
        'ü•© Beef',
        'üçó Chicken',
        'üçñ Pork',
        'üç§ Prawns',
        'üêü Fish',
        'üê† Salmon',
        'ü¶ê Shrimp',
        'ü¶ë Squid',
        'ü¶Ä Crab',
        'ü¶û Lobster',
        'üçû Toast',
        'ü•• Coconut Water',
        'üçâ Melon Juice',
        'üçá Grape Juice',
        'üçí Cherry Juice',
        'üçì Strawberry Shake',
        'üçã Lemonade',
        'üçå Banana Smoothie',
        'üçé Apple Pie',
        'üçè Green Apple Tart',
        'üçä Orange Sorbet',
        'üçê Pear Tart',
        'üçë Peach Cobbler',
        'ü•≠ Mango',
        'üçà Melon Balls',
        'ü•ù Kiwi Slice',
        'üçÖ Tomato Soup',
        'üåΩ Corn on the Cob',
        'ü•í Pickles',
        'ü•ï Carrot Cake',
        'ü•¶ Broccoli Cheese',
        'ü•¨ Lettuce Wrap',
        'ü•î Mashed Potatoes',
        'üçÜ Eggplant Parmesan',
        'üçÑ Mushroom Risotto',
        'üå∂Ô∏è Spicy Chili',
        'üßÑ Garlic Bread',
        'üßÖ Onion Rings',
        'üçö Fried Rice',
        'üçò Seaweed Snack',
        'üç¢ Skewers',
        'üç° Mochi',
        'üçß Gelato',
        'üç® Sundae',
        'üç¶ Cone Ice Cream',
        'üçπ Mojito',
        'üç∏ Cosmopolitan',
        'üç∑ Red Wine',
        'üç∫ Lager',
        'ü•Ç Prosecco',
        '‚òï Espresso',
        'üçµ Matcha',
        'ü•§ Lemon Soda',
        'üç∂ Plum Wine',
        'üßÉ Orange Juice',
        'ü•õ Almond Milk',
        'üçØ Maple Syrup',
        'üßà Margarine',
        'ü•£ Porridge',
        'üßÄ Brie Cheese',
        'üçñ Sausage',
        'ü•© Filet Mignon',
        'üçó Drumstick',
        'üçñ Ribs',
        'üç§ Lobster Roll',
        'üêü Tuna',
        'üê† Cod',
        'ü¶ê Scampi',
        'ü¶ë Calamari',
        'ü¶Ä King Crab',
        'ü¶û Crawfish',
        'üçû Pita Bread',
        'ü•• Coconut Ice Cream'
      ];

    const handleInputChange = (text) => {
        setInputValue(text);
        console.log("change");

        if(!isGlobalPlat){
        const filteredSuggestions = platsPredefinis.filter((plat) =>
            plat.toLowerCase().includes(text.toLowerCase())
        );

        if (text.length > 0 && !platsPredefinis.includes(text)) {
            filteredSuggestions.push('Ajouter un plat √† ce restaurant');
        }

        setSuggestions(filteredSuggestions);}
        else {
            const filteredSuggestions = platsGlobal.filter((plat) =>
            plat.toLowerCase().includes(text.toLowerCase())
        );
        if (text.length > 0 && !platsPredefinis.includes(text)) {
            filteredSuggestions.push('Ajouter ce plat');
        }
        setSuggestions(filteredSuggestions);
    }
    };

    const handleSuggestionPress = (suggestion) => {
        if (suggestion === 'Ajouter un plat √† ce restaurant') {

            console.log("Ajouter un plat √† ce restaurant");
            setIsGlobalPlat(true);
            // setSelectedPlat(inputValue);
            


        } else {
            setSelectedPlat(suggestion);
        }
        setTimeout(() => {
        handleInputChange(inputValue), 100});
        // setInputValue('');
        // setSuggestions([]);
    };

    return (
        <View style={{
            backgroundColor: theme.background,
            flex: 1,
            width: "100%",
            alignSelf: "center"
        }}>
            <TouchableOpacity onPress={() => { navigation.goBack() }}>
                <View style={{ alignItems: "flex-end", marginRight: 10, marginTop: 10 }}>
                    <Ionicons name="close" size={30} color="gray" />
                </View>
            </TouchableOpacity>
            <View style={{ paddingHorizontal: 20 }}>
                <Text style={{ fontFamily: "Inter-Black", fontSize: 22, color: theme.text }}>
                    Ajouter un plat
                </Text>
            </View>
            
            {/* Input avec suggestions */}
            <View style={{ backgroundColor: theme.light_gray, paddingVertical: 5, paddingHorizontal: 5, borderRadius: 5, marginTop: 10, marginHorizontal: 20 }}>
                <Text style={{ width: "100%", fontFamily: "Inter-Bold", fontSize: 15, color: theme.dark_gray }}>
                    üç¥Plat
                </Text>
                <TextInput
                    placeholder='pasta...'
                    style={{ fontFamily: "Inter-SemiBold", marginLeft: 6, marginTop: 0 }}
                    value={inputValue}
                    onChangeText={handleInputChange}
                />
                
            </View>
            {
                suggestions.length > 1 && inputValue.length > 0 && !isGlobalPlat ? (
                    <Text style={{ marginHorizontal: 22, color: theme.dark_gray, marginTop: 5,marginBottom : -2, fontFamily: "Inter-SemiBold" }}>
                        Plat de ce restaurant
                    </Text>
                ) :
                (
                    isGlobalPlat && inputValue.length > 0 && suggestions.length > 1 ? (
                    
                    <Text style={{ marginHorizontal: 22, color: theme.dark_gray, marginTop: 5,marginBottom : -2, fontFamily: "Inter-SemiBold" }}>
                        Plat de l'appli
                    </Text>
                    ) : (
                        isGlobalPlat ? (
                            <Text style={{ marginHorizontal: 22, color: theme.red, marginTop: 5,marginBottom : -2, fontFamily: "Inter-SemiBold" }}>
                                Ce plat n'existe pas dans l'appli, ameliore l'appli en l'ajoutant üòÅ
                            </Text>
                        ) : null
                    )

                )
                // (
                //     inputValue.length > 0 ? (
                        
                //         <Text style={{ marginHorizontal: 20, color: theme.dark_gray, marginTop: 20, fontFamily: "Inter-SemiBold" }}>
                //             Ce plat n'a jamais √©t√© ajout√©
                //         </Text>)
                //         :
                //         null
                // )
            }
            {inputValue.length > 0 && (
    <FlatList
        data={ suggestions}
        keyExtractor={(item, index) => index.toString()}
        renderItem={({ item,index }) => (
            <TouchableOpacity activeOpacity={0.8} onPress={() => handleSuggestionPress(item)}>
                <View style={{ marginHorizontal: 20,marginBottom : 4, borderColor : theme.gray,borderWidth : 1 ,backgroundColor : theme.light_gray,borderRadius : 10  }}>
                    <View style={{ padding: 10,flexDirection: 'row',alignItems : "center"}}>
                    {
                        (index === suggestions.length - 1)  ? (
                            <FontAwesome name="plus-circle" size={16} color={theme.dark_gray} style={{marginRight : 5  }} />
                        ) : null
                    }
                    <Text style={{  color: theme.text,fontFamily : "Inter-Bold" }}>
                        {item}
                    </Text>
                    </View>
                </View>
            </TouchableOpacity>
        )}
        style={{
            maxHeight: ( suggestions.length > 4 ? 4 : suggestions.length ) * 47 ,
            borderRadius: 5,
            marginTop: 5,
            zIndex: 1,
        }}
        scrollEnabled={(!isGlobalPlat && suggestions.length > 4) || (isGlobalPlat && platsGlobal.length > 4) ? true : false}
        contentContainerStyle={{ flexGrow: 1 }}
    />
)}


            {/* Les autres composants restent inchang√©s */}
            <View style={{ backgroundColor: theme.light_gray, paddingVertical: 5, paddingHorizontal: 10, borderRadius: 5, marginTop: 10, marginHorizontal: 20 }}>
                <Text style={{ width: "100%", fontFamily: "Inter-Bold", fontSize: 15, color: theme.dark_gray }}>
                    üí¨Avis
                </Text>
                <TextInput
                    numberOfLines={2}
                    placeholder='Tr√®s bon... '
                    style={{ fontFamily: "Inter-SemiBold", marginLeft: 2 }}
                />
            </View>

            <TouchableOpacity activeOpacity={0.8}>
                <View style={{ backgroundColor: theme.text, margin: 20, justifyContent: "center", alignItems: "center", borderRadius: 10 }}>
                    <Text style={{ fontFamily: "Inter-Bold", fontSize: 15, color: theme.background, padding: 10 }}>
                        Envoyer
                    </Text>
                </View>
            </TouchableOpacity>
        </View>
    );
};

export default NewAvisView;
